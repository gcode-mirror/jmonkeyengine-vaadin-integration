<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.wholebrainprojecttutorials</groupId>
	<artifactId>jmeapplet</artifactId>
	<name>JMEVaadinApplet</name>
	<version>1.0</version>
	<description>jMonkeyEngine Applet for Vaadin</description>
	<licenses>
		<license>
			<name>LGPL</name>
			<url>http://www.opensource.org/licenses/lgpl-2.1.php
			</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<developers>
		<developer>
			<id>jrmartin</id>
			<name>Jesus R Martinez</name>
			<email>jrmartin@ncmir.ucsd.edu</email>
		</developer>
		<developer>
			<id>slarson</id>
			<name>Stephen Larson</name>
			<email>slarson@ncmir.ucsd.edu</email>
		</developer>
	</developers>
	<scm>
		<connection>scm:svn:http://wholebrain.googlecode.com/svn/JmeVaadinApplet/trunk</connection>
		<developerConnection>scm:svn:https://wholebrain.googlecode.com/svn/JmeVaadinApplet/trunk</developerConnection>
		<url>http://code.google.com/p/wholebrain/source/browse/#svn/JmeVaadinApplet/trunk</url>
	</scm>
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>gwt-maven-plugin</artifactId>
					<version>1.1</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<!--
			Just defines how you want compilation of java classes to happen
		-->
		<plugins>
			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<archive>
						<index>true</index>
						<manifest>
							<addClasspath>true</addClasspath>
							<!--
								Implementation-Title and Implementation-Version come from the
								POM by default
							-->
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<!-- Package format version - do not change -->
							<Vaadin-Package-Version>1</Vaadin-Package-Version>

							<!-- Add-on specific fields to update -->

							<!--
								Implementation-Title and Implementation-Version come from the
								POM by default
							-->
							<!--
								<Implementation-Title>${pom.name}</Implementation-Title>
								<Implementation-Version>${pom.version}</Implementation-Version>
							-->

							<!-- Comma-separated list of widgetsets in the package -->
							<Vaadin-Widgetsets>org.vaadin.jme.widgetset.JmeVaadinAppletWidgetset</Vaadin-Widgetsets>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>


			<!-- run with: mvn release:prepare , and then : mvn release:perform -->
			<!-- pre reqs: 'mvn' and 'svn' must both work on the command line -->
			<!--
				recommended that you do not use the embedded eclipse version of
				maven
			-->
			<!--
				instead, install the latest version on your system and run the
				external version
			-->
			<!-- should set JAVA_HOME to point to java and "MAVEN_OPTS=-Xmx768m" -->
			<plugin>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.0-beta-9</version>
				<configuration>
					<tagBase>
						https://wholebrain.googlecode.com/svn/JmeVaadinApplet/tags
					</tagBase>
					<!--
						triggers the profile below called 'release', which causes
						release:perform to send the released versions of the jars to the
						maven repository, rather than to the Google code SVN repository
						(where the tag goes)
					-->
					<releaseProfiles>release</releaseProfiles>
					<!-- solves problem of not having jars installed -->
					<!-- see http://tinyurl.com/7dfbx2 for more -->
					<preparationGoals>clean verify install</preparationGoals>
					<!-- uncomment below when ready to deploy the site regularly -->
					<!-- <goals>package deploy site-deploy</goals> -->
					<goals>deploy</goals>
				</configuration>
			</plugin>

		</plugins>
		<!--
			This is needed for the sources required by the GWT compiler to be
			included in the produced JARs
		-->
		<resources>
			<resource>
				<directory>src/main/java</directory>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>
	</build>
	<dependencies>
		<dependency>
			<groupId>com.jmonkeyengine
			</groupId>
			<artifactId>jme</artifactId>
			<version>2.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.vaadin.addons</groupId>
			<artifactId>appletintegration</artifactId>
			<version>1.1.4</version>
		</dependency>
	</dependencies>

	<repositories>
		<repository>
			<id>openccdb-public</id>
			<url>http://openccdb.org:8081/nexus/content/groups/public</url>
		</repository>
		<repository>
			<id>openccdb-snapshot</id>
			<url>http://openccdb.org:8081/nexus/content/groups/public-snapshots</url>
		</repository>
		<repository>
			<id>openccdb-thirdparty</id>
			<url>http://openccdb.org:8081/nexus/content/repositories/thirdparty</url>
		</repository>
		<repository>
			<id>vaadin-addons</id>
			<url>http://maven.vaadin.com/vaadin-addons</url>
		</repository>
	</repositories>

	<distributionManagement>
		<repository>
			<id>releases</id>
			<name>Internal Releases</name>
			<url>http://openccdb.org:8081/nexus/content/repositories/releases</url>
		</repository>
		<snapshotRepository>
			<id>snapshots</id>
			<name>Internal Snapshots</name>
			<url>http://openccdb.org:8081/nexus/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>
</project>